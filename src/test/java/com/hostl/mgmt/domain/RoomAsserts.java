package com.hostl.mgmt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RoomAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomAllPropertiesEquals(Room expected, Room actual) {
        assertRoomAutoGeneratedPropertiesEquals(expected, actual);
        assertRoomAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomAllUpdatablePropertiesEquals(Room expected, Room actual) {
        assertRoomUpdatableFieldsEquals(expected, actual);
        assertRoomUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomAutoGeneratedPropertiesEquals(Room expected, Room actual) {
        assertThat(expected)
            .as("Verify Room auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomUpdatableFieldsEquals(Room expected, Room actual) {
        assertThat(expected)
            .as("Verify Room relevant properties")
            .satisfies(e -> assertThat(e.getRoomNo()).as("check roomNo").isEqualTo(actual.getRoomNo()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getCost()).as("check cost").isEqualTo(actual.getCost()))
            .satisfies(e -> assertThat(e.getBeds()).as("check beds").isEqualTo(actual.getBeds()))
            .satisfies(e -> assertThat(e.getFloor()).as("check floor").isEqualTo(actual.getFloor()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomUpdatableRelationshipsEquals(Room expected, Room actual) {}
}
